{"version":3,"sources":["Components/LandingPage.js","Components/Header.js","Components/HomeLibrary.js","Components/CreateUser.js","Components/SignIn.js","Components/UsersLibrary.js","Components/Footer.js","App.js","serviceWorker.js","index.js","assets/keplerLogo.png"],"names":["LandingPage","props","react_default","a","createElement","className","react_router_dom","to","errorMessage","Header","src","keplerLogo","alt","signInSuccess","onClick","listUsersSongs","signOut","HomeLibrary","homeLibrary","length","lastDownloadId","map","song","key","id","title","artist","aria-hidden","value","downloadSong","react_router","CreateUser","onSubmit","createUser","htmlFor","type","name","onChange","handleChange","username","placeholder","required","userEmail","userPassword","minLength","maxLength","signInError","SignIn","UsersLibrary","usersLibrary","usersDownloads","Footer","proxyUrl","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createLibrary","library","kTunesLibrary","forEach","$","replace","_","trim","songInfo","push","sortLibrary","array","finalArray","sort","b","setState","e","preventDefault","axios","get","headers","Authorization","params","method","email","concat","state","password","then","res","parseString","require","data","err","result","response","songs","addUsersDownloadsToLibrary","catch","error","downloadedSongs","trimmedSongs","songId","updateUsersLibrary","currentTarget","getSong","getLastDownload","recentDownloadId","songid","xml","downloadResponse","message","createUserResponse","field","target","defineProperty","_this2","jsonResponseListSongs","_this3","Components_Header","path","exact","render","Components_LandingPage","Components_HomeLibrary","Components_CreateUser","Components_SignIn","Components_UsersLibrary","Components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2745888c.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst LandingPage = (props) => {\n  return(\n    <main className=\"LandingPage gradient\">\n      <h1>Welcome to kTunes</h1>\n      <p>Explore. Listen. Repeat.</p>\n      <p>kTunes is a free, hasse-free music library. <Link to=\"/newuser\" className=\"signInLink\">Join today!</Link></p>\n\n      {props.errorMessage !== null ? <p className=\"errorMessage\">Sorry, there appears to be a {props.errorMessage}. Please tune in again soon.</p> : null}    \n\n    </main>   \n  )\n}\n\nexport default LandingPage;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport keplerLogo from '../assets/keplerLogo.png';\n\nconst Header = (props) => {\n  return (\n    <header className=\"Header wrapper\">\n      <div className=\"headerFlexContainer\">\n        <div>\n          <img src={keplerLogo} alt=\"Kepler Communications Logo\" className=\"logo\" />\n        </div>\n        <h1><Link to=\"/\">kTunes</Link></h1>\n\n        {/* ternary operate to check if the user signed in successfully, and display respective content */}\n        {props.signInSuccess ?\n          <p><span><Link to=\"/home\" className=\"signInLink\">kTunes Home</Link></span><span><button onClick={props.listUsersSongs}><Link to=\"/mylibrary\" className=\"signInLink\">My Library</Link></button><button onClick={props.signOut} className=\"signInLink\">Sign Out</button></span>\n          </p>\n          :\n          <p><span className=\"signInLink\"><Link to=\"/signin\">Sign In</Link></span><span className=\"signInLink\"><Link to=\"/newuser\">Sign Up</Link></span> </p>\n        }\n      </div>\n    </header>\n  )\n}\n\nexport default Header;\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst HomeLibrary = (props) => {\n  return (\n    <div>\n      {/* ternary operate used to check if sign in was a success, if not, redirect to landing page */}\n      {props.signInSuccess ?\n        <main className=\"wrapper\">\n        <h1>Home</h1>\n          {props.homeLibrary.length === 0 ?\n            <div className=\"ldsRipple\"><div></div><div></div></div> :\n            <div className=\"libraryMain\">\n              <aside className=\"recentlyDownloadedAside\">\n                <h2>Recently Downloaded</h2>\n                {props.lastDownloadId.map(song => {\n                  return (\n                    <ul>\n                      <li key={song.id}>\n                        <p>{song.title}</p>\n                        <p>{song.artist}</p>\n                        <button>\n                          <i className=\"far fa-play-circle\" aria-hidden=\"true\"></i>\n                          <span className=\"sr-only\">Listen to {song.title} by {song.artist}.</span>\n                        </button>\n                      </li>\n                    </ul>\n                  )\n                })}\n              </aside>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Song</th>\n                    <th>Artist</th>\n                    <th>Download</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.homeLibrary.map(song => {\n                    return (\n                      <tr key={song.id}>\n                        <td>{song.title}</td>\n                        <td>{song.artist}</td>\n                        <td>\n                          <button value={song.id} onClick={props.downloadSong}>\n                            <i className=\"fas fa-arrow-circle-down\" aria-hidden=\"true\"></i>\n                            <span className=\"sr-only\">Download {song.title} by {song.artist}.</span>\n                          </button>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          }\n        </main> : \n        <Redirect to=\"/\" />\n      }\n    </div>\n  )\n}\n\nexport default HomeLibrary;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst CreateUser = (props) => {\n  return (\n    <main className=\"gradient\">\n      <h2>Explore. Listen. Repeat.</h2>\n      <p>Create an account below.</p>\n      <Link to=\"/signin\" className=\"signInLink\">Already a user? Sign in.</Link>\n      <form onSubmit={props.createUser} className=\"signInForm\">\n\n        <label htmlFor=\"username\" className=\"visuallyHidden\">Username</label>\n        <input type=\"text\" id=\"username\" name=\"username\" onChange={props.handleChange} value={props.username} placeholder=\"Username\" required />\n\n        <label htmlFor=\"email\" className=\"visuallyHidden\">Email Address</label>\n        <input type=\"email\" onChange={props.handleChange} id=\"email\" name=\"userEmail\" value={props.userEmail} placeholder=\"Email Address\" required />\n\n        <label htmlFor=\"password\" className=\"visuallyHidden\">Password</label>\n        <input type=\"password\" id=\"password\" name=\"userPassword\" value={props.userPassword} onChange={props.handleChange} placeholder=\"******\" required minLength=\"8\" maxLength=\"12\" />\n\n        <input type=\"submit\" value=\"Sign Up\" />\n\n        {props.signInError !== null ?\n\n          <p>{props.signInError} <Link to=\"/signin\" className=\"signInLink\">Sign In</Link></p>\n\n          : null\n        }\n      </form>\n      {props.errorMessage !== null ? <p>{props.errorMessage}</p> : null}\n\n      {props.signInSuccess ?\n        <Redirect to=\"/home\" />\n        : null\n      }\n    </main>\n  )\n}\n\nexport default CreateUser;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst SignIn = (props) => {\n\n  return (\n    <main className=\"gradient\">\n      <h2>Explore. Listen. Repeat.</h2>\n      <p>Welcome back! Please sign in.</p>\n      <Link to=\"/newuser\" className=\"signInLink\">New to kTunes? Sign up!</Link>\n      <form onSubmit={props.listUsersSongs} className=\"signInForm\">\n\n        <label htmlFor=\"username\" className=\"visuallyHidden\">Username</label>\n        <input type=\"text\" id=\"username\" name=\"username\" onChange={props.handleChange} value={props.username} placeholder=\"Username\" required />\n\n        <label htmlFor=\"email\" className=\"visuallyHidden\">Email Address</label>\n        <input type=\"email\" onChange={props.handleChange} id=\"email\" name=\"userEmail\" value={props.userEmail} placeholder=\"Email Address\" required />\n\n        <label htmlFor=\"password\" className=\"visuallyHidden\">Password</label>\n        <input type=\"password\" id=\"password\" name=\"userPassword\" value={props.userPassword} onChange={props.handleChange} placeholder=\"******\" minLength=\"8\" maxLength=\"12\" />\n\n        <input type=\"submit\" value=\"Sign In\" />\n        {props.signInError !== null ?\n\n          <p>{props.signInError} <Link to=\"/signup\" className=\"signInLink\">Sign Up</Link></p>\n\n          : null\n        }\n\n      </form>\n\n      {props.signInSuccess ?\n        <Redirect to=\"/home\" />\n        : null\n      }\n    </main>\n  )\n}\n\nexport default SignIn;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst UsersLibrary = (props) => {\n  return (\n    <div>\n      {/* ternary operate used to check if sign in was a success, if not, redirect to landing page */}\n      {props.signInSuccess ?\n        <main className=\"wrapper\">\n        <h1>{props.username}'s Library</h1>\n          {props.usersLibrary.length !== props.usersDownloads.length ?\n            <div className=\"ldsRipple\"><div></div><div></div></div> :\n            <table>\n              <thead>\n                <tr>\n                  <th>Song</th>\n                  <th>Artist</th>\n                  <th>Listen</th>\n                </tr>\n              </thead>\n              <tbody>\n                {props.usersLibrary.map(song => {\n                  return (\n                    <tr key={song.id}>\n                      <td>{song.title}</td>\n                      <td>{song.artist}</td>\n                      <td>\n                        <button>\n                          <i className=\"far fa-play-circle\" aria-hidden=\"true\"></i>\n                          <span className=\"sr-only\">Listen to {song.title} by {song.artist}.</span>\n                        </button>\n                      </td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          }\n        </main>\n        : \n        <Redirect to=\"/\" />}\n    </div>\n  )\n}\n\nexport default UsersLibrary","import React from 'react';\n\nconst Footer = () => {\n  return(\n    <footer>kTunes 2019 | Coded by Alanna O'Connor</footer>\n  )\n}\n\nexport default Footer;","//dependencies \nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n//components\nimport LandingPage from './Components/LandingPage.js'\nimport Header from './Components/Header.js';\nimport HomeLibrary from \"./Components/HomeLibrary.js\";\nimport CreateUser from './Components/CreateUser.js'\nimport SignIn from './Components/SignIn.js'\nimport UsersLibrary from './Components/UsersLibrary.js';\nimport Footer from './Components/Footer.js';\n\n//styles\nimport './App.css';\n\n//proxy used to ensure no cors error\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      kTunesLibrary: [],\n      usersLibrary: [],\n      username: \"\",\n      userEmail: \"\",\n      userPassword: \"\",\n      lastDownloadId: [],\n      usersDownloads: [],\n      signInError: null,\n      errorMessage: null,\n      signInSuccess: false\n    }\n  }\n\n  //on page load, retrieve the ktunes library \n  componentDidMount() {\n\n    const listingUrl = `https://kepler.space/frontend2019/stinging_phonemes/listSongs`\n\n    axios.get(proxyUrl + listingUrl, {\n      headers: {\n        Authorization: `Bearer stinging_phonemes `\n      },\n      params: {\n        method: \"GET\",\n      }\n    })\n      .then((res) => {\n\n        //converting xml to json \n        const parseString = require('xml2js').parseString;\n        const xml = res.data;\n        const jsonResponseListSongs = [];\n        parseString(xml, function (err, result) {\n          jsonResponseListSongs.push(result.response.songs[0].song);\n        });\n\n        this.createLibrary(jsonResponseListSongs[0])\n      })\n      .catch(error => {\n        this.setState({\n          errorMessage: error.message\n        })\n\n      })\n  }\n\n  //function to restructure data in array from the the api call\n  createLibrary = (library) => {\n    const kTunesLibrary = [];\n\n    let title;\n    let artist;\n    let id;\n\n    //function to update artist and song titles that were mixed up\n    library.forEach(song => {\n\n      if (song.$.name === \"ABBA\" || song.$.name === \"Sugar Ray\" || song.$.name === \"The Beatles\") {\n        title = song.$.artist.replace(/([a-z])([A-Z])/, '$1 $2');\n        artist = song.$.name;\n        id = (song._).trim()\n      } else {\n        title = song.$.name.replace(/([a-z])([A-Z])/, '$1 $2');\n        artist = song.$.artist;\n        id = (song._).trim();\n      }\n      const songInfo = { title, artist, id }\n      kTunesLibrary.push(songInfo)\n    })\n\n    this.sortLibrary(kTunesLibrary)\n  }\n\n  //function to sort library by artist name and set state to the final array of data\n  sortLibrary = (array) => {\n    const finalArray = array.sort((a, b) => {\n      if (a.artist < b.artist) {\n        return -1;\n      } else if (a.artist > b.artist) {\n        return 1;\n      }\n    })\n \n    this.setState({\n      kTunesLibrary: finalArray\n    })\n  }\n\n  //function to sign in existing user and retrive their downloaded songs\n  listUsersSongs = (e) => {\n    e.preventDefault()\n\n    const listingUrl = `https://kepler.space/frontend2019/stinging_phonemes/listSongs`\n\n    axios.get(proxyUrl + listingUrl, {\n      headers: {\n        Authorization: `Bearer stinging_phonemes `\n      },\n      params: {\n        method: \"GET\",\n        email: `${this.state.userEmail}`,\n        password: `${this.state.userPassword}`,\n      }\n    }).then((res) => {\n\n      const usersDownloads = []\n      const parseString = require('xml2js').parseString;\n      const xml = res.data;\n\n      parseString(xml, function (err, result) {\n        usersDownloads.push((result.response.songs[0].song))\n      });\n\n\n      this.addUsersDownloadsToLibrary(usersDownloads)\n\n      this.setState({\n        signInError: null,\n        signInSuccess: true,\n        usersDownloads: usersDownloads[0]\n      })\n\n    })\n      .catch((error) => {\n\n        this.setState({\n          signInError: \"No account found. Please try again or create a new account.\"\n        })\n\n      })\n  }\n\n  //functio nto add previously downloaded songs to the users current library\n  addUsersDownloadsToLibrary = (usersDownloads) => {\n\n    const downloadedSongs = []\n    const trimmedSongs = []\n\n    usersDownloads[0].forEach(songId => {\n      const id = (songId).trim()\n      trimmedSongs.push(id)\n    })\n\n    trimmedSongs.forEach(songId => {\n      this.state.kTunesLibrary.map(song => {\n        if (song.id === songId) {\n          downloadedSongs.push(song)\n        }\n      })\n    })\n\n    this.setState({\n      usersLibrary: downloadedSongs\n    })\n  }\n\n  // function to match the song id of download to songs in ktunes library and create new song record in users library\n  updateUsersLibrary = (songId) => {\n    const usersLibrary = []\n\n    this.state.kTunesLibrary.map(song => {\n      if (song.id === songId) {\n        usersLibrary.push(song)\n      }\n    })\n\n    this.setState({\n      usersLibrary: usersLibrary\n    })\n  }\n\n  //function to get song id and pass it as an argument in the get song function\n  downloadSong = (e) => {\n\n    const songId = (e.currentTarget.value);\n\n    this.getSong(songId);\n    this.updateUsersLibrary(songId)\n    this.getLastDownload(songId)\n  }\n\n //function to get user's last downloaded song to be displayed on DOM\n  getLastDownload = (songId) => {\n    const recentDownloadId = [];\n\n    this.state.kTunesLibrary.map(song => {\n      if (song.id === songId) {\n        recentDownloadId.push(song)\n      }\n    })\n    this.setState({\n      lastDownloadId: recentDownloadId\n    })\n  }\n\n\n  //function to get song id, midi file, and update user's library\n  getSong = (songId) => {\n\n    const listingUrl = `https://kepler.space/frontend2019/stinging_phonemes/getSong`\n\n    axios.get(proxyUrl + listingUrl, {\n      headers: {\n        Authorization: `Bearer stinging_phonemes `\n      },\n      params: {\n        method: \"GET\",\n        email: `${this.state.userEmail}`,\n        password: `${this.state.userPassword}`,\n        songid: `${songId}`\n      }\n    })\n      .then((res) => {\n\n        const parseString = require('xml2js').parseString;\n        const xml = res.data;\n        const downloadResponse = []\n\n        parseString(xml, function (err, result) {\n          downloadResponse.push(result.response)\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          errorMessage: error.message\n        })\n      })\n  }\n\n  //function to create new user in the api back-end\n  createUser = (e) => {\n    e.preventDefault()\n\n    const listingUrl = `https://kepler.space/frontend2019/stinging_phonemes/createUser`\n\n    axios.get(proxyUrl + listingUrl, {\n      headers: {\n        Authorization: `Bearer stinging_phonemes `\n      },\n      params: {\n        method: \"GET\",\n        name: `${this.state.username}`,\n        email: `${this.state.userEmail}`,\n        password: `${this.state.userPassword}`,\n      }\n    }).then((res) => {\n\n      const parseString = require('xml2js').parseString;\n      const xml = res.data;\n      const createUserResponse = []\n\n      parseString(xml, function (err, result) {\n        createUserResponse.push(result.response)\n      });\n\n      if (createUserResponse[0]._ === \"User already exists.\") {\n        this.setState({\n          signInError: \"An account already exists with this information.\",\n          signInSuccess: false\n        })\n      }\n\n      this.setState({\n        signInSuccess: true\n      })\n\n    }).catch((error) => {\n      this.setState({\n        errorMessage: error.message\n      })\n    })\n  }\n\n  //event handler to listen for user's input on change and update state\n  handleChange = (e) => {\n    const field = e.target.name;\n    const value = e.target.value\n\n    this.setState({\n      [field]: `${value}`\n    })\n  }\n\n  //sign user out\n  signOut = () => {\n    this.setState({\n      signInSuccess: false,\n      userEmail: \"\",\n      userPassword: \"\",\n      username: \"\",\n      lastDownloadId: {}\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header\n            listUsersSongs={this.listUsersSongs}\n            username={this.state.username}\n            signInSuccess={this.state.signInSuccess}\n            usersLibrary={this.state.usersLibrary}\n            signOut={this.signOut}\n          />\n\n          <Route path=\"/\" exact render={() => {\n            return (\n              <LandingPage\n                errorMessage={this.state.errorMessage}\n              />\n            )\n          }}\n          />\n\n          <Route path=\"/home\" render={() => {\n            return (\n              <HomeLibrary\n                homeLibrary={this.state.kTunesLibrary}\n                downloadSong={this.downloadSong}\n                usersDownloads={this.state.usersDownloads}\n                usersLibrary={this.state.usersLibrary}\n                lastDownloadId={this.state.lastDownloadId}\n                signInSuccess={this.state.signInSuccess}\n              />\n            )\n          }}\n          />\n\n          <Route path=\"/newuser\" render={() => {\n            return (\n              <CreateUser\n                signInSuccess={this.state.signInSuccess}\n                handleChange={this.handleChange}\n                createUser={this.createUser}\n                username={this.state.username}\n                userEmail={this.state.userEmail}\n                userPassword={this.state.userPassword}\n                signInError={this.state.signInError}\n                errorMessage={this.state.errorMessage}\n              />\n            )\n          }}\n          />\n\n          <Route path=\"/signin\" render={() => {\n            return (\n              <SignIn\n                listUsersSongs={this.listUsersSongs}\n                handleChange={this.handleChange}\n                userEmail={this.state.userEmail}\n                userPassword={this.state.userPassword}\n                signInError={this.state.signInError}\n                usersDownloads={this.state.usersDownloads}\n                signInSuccess={this.state.signInSuccess}\n              />\n            )\n          }}\n          />\n\n          <Route path=\"/mylibrary\" render={() => {\n            return (\n              <UsersLibrary\n                usersLibrary={this.state.usersLibrary}\n                usersDownloads={this.state.usersDownloads}\n                username={this.state.username}\n                signInSuccess={this.state.signInSuccess}\n              />\n            )\n          }} />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/keplerLogo.3599862a.png\";"],"sourceRoot":""}